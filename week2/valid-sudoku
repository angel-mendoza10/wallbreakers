class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board)
    {
        map<char, int> check;
        for(int i = 0; i < 9; ++i)
        {
            check.clear();
            for(int j = 0; j < 9; ++j)
            {
                if(board[i][j] != '.')
                {
                    if(check[board[i][j]]++ > 0)
                    {
                        return false;
                    }
                }
            }
        }
        for(int i = 0; i < 9; ++i)
        {
            check.clear();
            for(int j = 0; j < 9; ++j)
            {
                if(board[j][i] != '.')
                {
                    if(check[board[j][i]]++ > 0)
                    {
                        return false;
                    }
                }
            }
        }
        for(int i = 1; i < 9; i += 3)
        {
            for(int j = 1; j < 9; j += 3)
            {
                check.clear();
                if(board[i - 1][j - 1] != '.')
                {
                    if(check[board[i - 1][j - 1]]++ > 0)
                    {
                        return false;
                    }
                }
                if(board[i - 1][j] != '.')
                {
                    if(check[board[i - 1][j]]++ > 0)
                    {
                        return false;
                    }
                }
                if(board[i - 1][j + 1] != '.')
                {
                    if(check[board[i - 1][j + 1]]++ > 0)
                    {
                        return false;
                    }
                }
                if(board[i][j - 1] != '.')
                {
                    if(check[board[i][j - 1]]++ > 0)
                    {
                        return false;
                    }
                }
                if(board[i][j] != '.')
                {
                    if(check[board[i][j]]++ > 0)
                    {
                        return false;
                    }
                }
                if(board[i][j + 1] != '.')
                {
                    if(check[board[i][j + 1]]++ > 0)
                    {
                        return false;
                    }
                }
                if(board[i + 1][j - 1] != '.')
                {
                    if(check[board[i + 1][j - 1]]++ > 0)
                    {
                        return false;
                    }
                }
                if(board[i + 1][j] != '.')
                {
                    if(check[board[i + 1][j]]++ > 0)
                    {
                        return false;
                    }
                }
                if(board[i + 1][j + 1] != '.')
                {
                    if(check[board[i + 1][j + 1]]++ > 0)
                    {
                        return false;
                    }
                }
            }
        }
        return true;
    }
};
